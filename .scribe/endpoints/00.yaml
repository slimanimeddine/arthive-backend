name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/v1/sign-in
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sign In'
      description: 'Signs in a user and returns an auth token'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'The email address of the user attempting to sign in. Must be a valid email address.'
        required: true
        example: johndoe@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'The password associated with the user account.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      email: johndoe@gmail.com
      password: password
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
           "message": "Authenticated",
           "data": {
               "token": "{YOUR_AUTH_KEY}",
               "id": 1
           },
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/sign-up
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sign Up'
      description: 'Creates a new user'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'A unique username for the user.'
        required: true
        example: johndoe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'The email address of the user. Must be unique. Must be a valid email address.'
        required: true
        example: johndoe@gmail.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'A secure password for the user. Must be at least 8 characters long. Must be at least 8 characters.'
        required: true
        example: password
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      username: johndoe
      email: johndoe@gmail.com
      password: password
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "message": "User created successfully",
          "data": {
               "id": 1
          },
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/sign-out
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Sign Out'
      description: 'Signs out a user and deletes the auth token'
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
               "message": "Signed out successfully",
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
